{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","adoptedGoods","map","good","index","name","App","useState","goods","setState","sortedByState","setsortedByState","isReversed","setIsReversed","sortBy","value","modifiedGoods","ALPHABETIC","sort","good1","good2","localeCompare","LENGTH","length","className","type","cn","onClick","reverse","style","display","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0EAHCC,EAbyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGmCC,KAAI,SAACC,EAAMC,GAAP,MACvC,CAAEC,KAAMF,EAAMC,a,SAEXJ,K,wBAAAA,E,iBAAAA,M,KAKE,IAAMM,EAAM,WACjB,MAA0BC,mBAASN,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EACIF,mBAA0B,MAD9B,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,SAACC,GACd,IAAMC,EAAa,YAAOR,GAE1B,OAAQO,GACN,KAAKf,EAASiB,WACZD,EAAcE,MAAK,SAACC,EAAOC,GAAR,OACjBD,EAAMd,KAAKgB,cAAcD,EAAMf,SACjCM,EAAiBX,EAASiB,YAC1BR,EAASO,GACT,MACF,KAAKhB,EAASsB,OACZN,EAAcE,MAAK,SAACC,EAAOC,GAAR,OACjBD,EAAMd,KAAKkB,OAASH,EAAMf,KAAKkB,UACjCZ,EAAiBX,EAASsB,QAC1Bb,EAASO,KAuBf,OACE,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CAAC,SAAU,WAAY,CACnC,WAAYhB,IAAkBV,EAASiB,aAEzCU,QAAS,kBAAMb,EAAOd,EAASiB,aALjC,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,CAAC,SAAU,cAAe,CACtC,WAAYhB,IAAkBV,EAASsB,SAEzCK,QAAS,kBAAMb,EAAOd,EAASsB,SALjC,4BAUA,wBACEG,KAAK,SACLD,UAAWE,IAAG,CAAC,SAAU,cAAe,CACtC,YAA2B,IAAfd,IAEde,QA5Ca,WAEjBd,GADED,GAMJH,EAAS,YAAID,GAAOoB,YAgChB,qBAUA,wBACEH,KAAK,SACLD,UAAU,4BACVK,MAAO,CACLC,QAASlB,GAAcF,EACnB,eAAiB,QAEvBiB,QA9CW,WACjBhB,EAAiB,MACjBE,GAAc,GACdJ,EAASR,IAoCL,sBAaF,6BACGO,EAAMN,KAAI,SAAAC,GAAI,OACb,oBAAqB,UAAQ,OAA7B,SAAqCA,EAAKE,MAAjCF,EAAKC,gBClHxB2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.65e80b2b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst adoptedGoods = goodsFromServer.map((good, index) => (\n  { name: good, index }));\n\nenum SortType {\n  ALPHABETIC = 'ALPHABETIC',\n  LENGTH = 'LENGTH',\n}\n\nexport const App = () => {\n  const [goods, setState] = useState(adoptedGoods);\n  const [sortedByState, setsortedByState]\n    = useState<SortType | null>(null);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortBy = (value: SortType) => {\n    const modifiedGoods = [...goods];\n\n    switch (value) {\n      case SortType.ALPHABETIC:\n        modifiedGoods.sort((good1, good2) => (\n          good1.name.localeCompare(good2.name)));\n        setsortedByState(SortType.ALPHABETIC);\n        setState(modifiedGoods);\n        break;\n      case SortType.LENGTH:\n        modifiedGoods.sort((good1, good2) => (\n          good1.name.length - good2.name.length));\n        setsortedByState(SortType.LENGTH);\n        setState(modifiedGoods);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const reverseGoods = () => {\n    if (isReversed) {\n      setIsReversed(false);\n    } else {\n      setIsReversed(true);\n    }\n\n    setState([...goods].reverse());\n  };\n\n  const resetGoods = () => {\n    setsortedByState(null);\n    setIsReversed(false);\n    setState(adoptedGoods);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(['button', 'is-info'], {\n            'is-light': sortedByState !== SortType.ALPHABETIC,\n          })}\n          onClick={() => sortBy(SortType.ALPHABETIC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(['button', 'is-success'], {\n            'is-light': sortedByState !== SortType.LENGTH,\n          })}\n          onClick={() => sortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(['button', 'is-warning'], {\n            'is-light': isReversed === false,\n          })}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          style={{\n            display: isReversed || sortedByState\n              ? 'inline-block' : 'none',\n          }}\n          onClick={resetGoods}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good.index} data-cy=\"Good\">{good.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}